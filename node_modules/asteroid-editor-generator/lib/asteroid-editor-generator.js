/**
 * Expose `AsteroidEditorGenerator`.
 */

module.exports = AsteroidEditorGenerator;

/**
 * Module dependencies.
 */
 
var asteroid = require('asteroid')
  , EventEmitter = require('events').EventEmitter
  , debug = require('debug')('asteroid-editor-generator')
  , util = require('util')
  , inherits = util.inherits
  , assert = require('assert');
  
/**
 * Create a new `AsteroidEditorGenerator` with the given `options`.
 *
 * @param {Object} options
 * @return {AsteroidEditorGenerator}
 */

function AsteroidEditorGenerator(options) {
  EventEmitter.apply(this, arguments);
  
  this.options = options || {};

  this.app = asteroid();

  this.name = this.options._name;
  
  debug('created with options', options);
}

/**
 * Inherit from `EventEmitter`.
 */

inherits(AsteroidEditorGenerator, EventEmitter);

/**
 * Simplified APIs
 */

AsteroidEditorGenerator.create =
AsteroidEditorGenerator.createAsteroidEditorGenerator = function () {
  // add simplified construction / sugar here
  return new AsteroidEditorGenerator();
}

/**
 * Methods.
 */

AsteroidEditorGenerator.prototype.handle = function(url, req, res, next) {
  var oldUrl = req.url;
  req.url = url;
  var _next = function() {
    req.url = oldUrl;
    next();
  };

  this.app(req, res, _next);
};